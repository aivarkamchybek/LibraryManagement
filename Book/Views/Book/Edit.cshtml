@model Book.ViewModels.BookViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Book</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.BookId)

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PublishDate, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.PublishDate, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.PublishDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AuthorId, "Author", htmlAttributes: new { @class = "control-label" })
        @Html.DropDownList("AuthorId", ViewBag.Authors as SelectList, htmlAttributes: new { @class = "form-control" })
    </div>

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
